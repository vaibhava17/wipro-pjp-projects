I)
DECLARE
total_rows number(14);
E.EMPNO.id%type;
E.ENAME.name%type;
E.JOB.JOB%type;
CURSOR E.EMPLOYEE IS
SELECT EMPNO, ENAME, JOB FROM SCOTT.EMP
BEGIN
OPEN E.EMPLOYEE;
LOOP
FETCH E.JOB='CLERK';
EXIT WHEN E.EMPLOYEE%notfound;
ELSE
DELETE
E.EMPNOE=E.JOB;
DBMS_OUTPUT.PUT_LINE(TOTAL_ROWS||'DELETED SUCCESSFULLY');
END IF;
END;
/

II)
UPDATE SCOTT.EMP
SET
E.JOB='CLERK'
WHERE EMPNO='7369'.'7876','7900','7934'
ROLLBACK

III)
DECLARE
CURSOR EMP_CUR IS 
SELECT EMPNO,ENAME, (SAL*.05)SAL_HIKE
FROM EMPLOYEES
WHERE JOB LIKE '%_PROG'
ORDER BY EMPNO;
EMP_SAL_REC EMP_CUR%ROWTYPE;
BEGIN
OPEN EMP_CUR;
LOOP
FETCH EMP_CUR INTO EMP_SAL_REC;
EXIT WHEN EMP_CUR%NOTFOUND;
DBMS_OUTPUT.PUT_LINE('SALARY INCREASED FOR'|| EMP_SAL_REC.FIRST_NAME||'IS :'||EMP_SAL_REC.SAL_HIKE);
END LOOP;
CLOSE EMP_CUR;
END;
/

IV)
DECLARE
CURSOR dpt_cur IS
SELECT d.department_id id,
department_name deptname,
BEGIN
FOR DEPT_ALL IN DPT_CUR LOOP
SELECT Max (SALARY)
INTO EMP_MAX_SALARY
FROM EMPLOYEES
WHERE DEPARTMENT_ID = DEPT_ALL.NO;
IF EMP_MAX_SALARY IS NULL TEHN
EMP_NAME : ='';
ELSE
SELECT FIRST_NAME
INTO EMP_ENAME
FROM EMP
WHERE DEPARTMENT_ID=DEPT_ALL.ID
AND SALARY = EMP_MAX_SALARY;
END IF;
DBMS_OUTPUT.PUT_LINE('max salary than average sal');
END LOOP;
END;
/

V)
DECLARE
var_record employee%ROWTYPE;
CURSOR cur_test(max_sal) IS
SELECT * FROM EMPLOYEES WHERE SAL>MAX SAL,
first_name;
job_title,
hire_date;
FROM EMPLOYEES
NATURAL JOIN JOBS;
EMP_JOIN_DATE DATE;
BEGIN
open
dbms_output.put_line(Rpad('employee id',15)||Rpad('first Name',25)||Rpad('job Title',35)||'join Date',15 june 1981);
select max(end_date)+1;
INTO EMP_JOIN_DATE
FROM JOB_HISTORY
WHERE EMPLOYEE_ID= EMP_SAL_REC.EMPLOYEE_ID;
IF EMP_JOIN_DATE IS NULL THEN
EMP_JOIN_DATE : = EMP_SAL_REC.HIRE_DATE;
END IF
DBMS_OUTPUT.PUT_LINE(TO_CHAR(EMP_JOIN_DATE,'dd-mm-yyyy'));
CLOSE
END LOOP;
BEGIN
OPEN cur_test(2000);
LOOP
FETCH cur_test INTO var_record;
EXIT WHEN cur_test%NOTFOUND;
DBMS_OUTPUT.PUT_LINE('NAME'|| var_record.salary);
END LOOP;
CLOSE cur_test;
END;
/

VI)
DECLARE
var_record employee%ROWTYPE;
CURSOR cur_test(max_sal) IS
SELECT * FROM EMPLOYEES WHERE SAL>MAX SAL,
first_name;
job_title,
hire_date;
FROM EMPLOYEES
NATURAL JOIN JOBS;
EMP_JOIN_DATE DATE;
BEGIN
open
dbms_output.put_line(Rpad('employee id',15)||Rpad('first Name',25)||Rpad('job Title',35)||'join Date',15 june 1981);
select max(end_date)+1;
INTO EMP_JOIN_DATE
FROM JOB_HISTORY
WHERE EMPLOYEE_ID= EMP_SAL_REC.EMPLOYEE_ID;
IF EMP_JOIN_DATE IS NULL THEN
EMP_JOIN_DATE : = EMP_SAL_REC.HIRE_DATE;
ORDER BY 
JOIN_DATE('SATURDARY')
END IF
DBMS_OUTPUT.PUT_LINE(TO_CHAR(EMP_JOIN_DATE,'dd-mm-yyyy'));
CLOSE
END LOOP;
END;
/

VII)
DECLARE
CURSOR CUR(DNO NUMBER) IS SELECT * FROM EMP WHERE DEPTNO =DNO;
EVAL EMP%ROWTYPE;
BEGIN
OPEN CUR(&D);
LOOP
FETCH CUR INTO EVAL;
EXIT WHEN CUR%NOTFOUND;
DBMS_OUTPUT.PUT_LINE(EVAL.ENAME, EVAL_COMM);
END LOOP;
CLOSE CUR;
END;
/

VIII)
DECLARE
    CURSOR c_sal (in_year NUMBER :=1000 , in_dept_id NUMBER := 1)
    IS
        SELECT employee(sal+comm) revenue
        FROM department
        INNER JOIN department USING (dept_id)
        WHERE sal=1000 THEN DEPT='*'
        GROUP BY DEPT_id
        HAVING DEPT_id = in_DEPT_id;
        
    R_revenue c_revenue%rowtype;
BEGIN
    OPEN c_revenue;
    LOOP
        FETCH c_revenue INTO r_revenue;
        EXIT    WHEN c_revenue%notfound;
        -- show the revenue
        dbms_output.put_line(r_revenue.revenue);
    END LOOP;
    CLOSE c_revenue;
END;


IX)CREATE OR REPLACE PROCEDURE UPDATE_SAL(ENO IN NUMBER, NEWSAL IN NUMBER, RES OUT NUMBER)
IS 
BEGIN
UPDATE EMP SET SAL= NEWSAL WHERE JOB='CLERK';
IF 
SAL>=100
THEN
NEWSAL=SAL+(10/100);
RES : = SQL%ROWCONT;
END IF;
DBMS_OUTPUT.PUT('SAL UPDATED SUCCESSFULLY')
END;
/

x)
DECLARE
GTSAL NUMBER :=0;
DNO NUMBER;
EVAL EMP%ROWTYPE;
DVAL DEPT.DEPTNO%TYPE;
CURSOR DCUR IS SELECT DEPTNO FROM DEPT;
TOTSAL NUMBER;
CURSOR CUR(D NUMBER) IS SELECT * FROM EMP WHERE DEPTNO =D;
BEGIN 
OPEN DCUR;
LOO[
FETCH DCUR INTO DVAL;
EXIT WHEN DCUR%NOTFOUND;
DBMS_OUTPUT.PUT_LINE('------------------');
DBMS_OUTPUT.PUT_LINE('THE DEPT DETAILS OF' || DVA);
DBMS_OUTPUT.PUT_LINE('------------------');

TOTALSAL : =0;
OPEN CUR(DVAL);
LOOP
FETCH CUR INTO EVAL;
EXIT WHEN CUR%NOTFOUND;
DBMS_OUTPUT.PUT_LINE(RPAD(EVAL.ENAME,10,'')|| '' || RPAD(EVAL.DEPTNO,5,'')||''(EVAL,SAL));
TOTSAL := TOTSAL+EVAL.SAL;
END LOOP;
DBMS_OUTPUT.PUT_LINE('------------------');
DBMS_OUTPUT.PUT_LINE('TOTAL SAL IS'|| TOTSAL);
GTSAL : = GTSAL+TOTALSAL;
CLOSE CUR;
END LOOP;
CLOSE DCUR;
DBMS_OUTPUT.PUT_LINE('------------------');
DBMS_OUTPUT.PUT_LINE('THE TOTAL GRAD SAL IS'|| GTSAL);
END;
/

XI)
SELECT * FROM EMP 
(CASE 1: 
WHEN SAL>2000 THEN 'THIS EMPLOYEE EARN MORE THAN 2000'
ELSE 'EMPLOYEE EARN LESS THAN 2000')
END AS SALDETAILS;
FROM EMPLOYEES;



