I)
CREATE OR REPLACE TRIGGER AUTO_INSERT_EMP
BEFORE INSERT ON AUDIT_EMP FOR EACH ROW
SELECT * FROM EMP;
ALTER TABLE EMPLOYEE DISABLE TRIGGER TR_EMP;
END;
/
II)
CREATE OR REPLACE TRIGGER AUTO_INSERT_AUDIT_EMP 
BEFOR INSERT ON AUDIT_EMP FOR EACH ROW
DECLARE
EMP.ENAEM;
EMP.USERNAME;
EMP.DATE;
BEGIN : NEW.EMPNO= ENO_AUTO.NEXTVAL;
SELECT AUDIT_EMP INTO EMP.ENAME FROM EMP WHERE EMPNO= :NEW.EMPNO;
END;
CREATE OR REPLACE TRIGGER AUTO_UPDATE_AUDIT_EMP 
BEFOR INSERT ON AUDIT_EMP FOR EACH ROW
DECLARE
EMP.ENAEM;
EMP.USERNAME;
EMP.DATE;
BEGIN : NEW.EMPNO= ENO_AUTO.NEXTVAL;
SELECT AUDIT_EMP INTO EMP.ENAME FROM EMP WHERE EMPNO= :NEW.EMPNO;
END;
CREATE OR REPLACE TRIGGER AUTO_DELETE_AUDIT_EMP 
BEFOR INSERT ON AUDIT_EMP FOR EACH ROW
DECLARE
EMP.ENAEM;
EMP.USERNAME;
EMP.DATE;
BEGIN : NEW.EMPNO= ENO_AUTO.NEXTVAL;
SELECT AUDIT_EMP INTO EMP.ENAME FROM EMP WHERE EMPNO= :NEW.EMPNO;
END;
COMMITT AUDIT_EMP;
END;
/

III)
CREATE OR REPLACE TRIGGER AUTO_INSERT_DEPT 
INSTEAD OF INSERT ON EMPDEPT
FOR EACH ROW 
DECLARE
CNT NUMBER;
BEGIN
 SELECT COUNT(*) INTO CNT FROM DEPT WHERE DEPTNO = :NEW.DEPTNO;
IF CNT=0 THEN
INSERT INTO DEPT VALUES(:NEW.DPETNO, : NEW.DNAME, :NEW.LOC);
ELSE
DBMS_OUTPUT.PUT('EMP ALREADY EXITS:');
END IF;
INSERT INTO EMP(EMPNO, ENAME, SAL, DEPTNO) VALUES(:NEW.EMPNO, :NEW.ENAME, :NEW.SAL, :NEW.DEPTNO);
END;
CREATE OR REPLACE TRIGGER AUTO_UPDATE_DEPT 
INSTEAD OF INSERT ON EMPDEPT
FOR EACH ROW 
DECLARE
CNT NUMBER;
BEGIN
 SELECT COUNT(*) INTO CNT FROM DEPT WHERE DEPTNO = :NEW.DEPTNO;
IF CNT=0 THEN
INSERT INTO DEPT VALUES(:NEW.DPETNO, : NEW.DNAME, :NEW.LOC);
ELSE
DBMS_OUTPUT.PUT('EMP ALREADY EXITS:');
END IF;
INSERT INTO EMP(EMPNO, ENAME, SAL, DEPTNO) VALUES(:NEW.EMPNO, :NEW.ENAME, :NEW.SAL, :NEW.DEPTNO);
END;
CREATE OR REPLACE TRIGGER AUTO_DELETE_DEPT 
INSTEAD OF INSERT ON EMPDEPT
FOR EACH ROW 
DECLARE
CNT NUMBER;
BEGIN
 SELECT COUNT(*) INTO CNT FROM DEPT WHERE DEPTNO = :NEW.DEPTNO;
IF CNT=0 THEN
INSERT INTO DEPT VALUES(:NEW.DPETNO, : NEW.DNAME, :NEW.LOC);
ELSE
DBMS_OUTPUT.PUT('EMP ALREADY EXITS:');
END IF;
INSERT INTO EMP(EMPNO, ENAME, SAL, DEPTNO) VALUES(:NEW.EMPNO, :NEW.ENAME, :NEW.SAL, :NEW.DEPTNO);
END;
/

v)
CREATE TRIGGER TR_LIMITMAXIMUMLOGINS ON ALL SERVER
FOR LOGON
AS 
BEGIN
IF( SELECT COUNT(*)
FROM SYS.DM_EXEC_SESSIONS WHERE IS_USER_PROCESSS=1)
>3
BEGIN
DBMS_OUTPUT.PUT(THIS SQL INSTANCE ALLOWS MAXIMUM THAN THREE, CONNECTION IS FAILED':);
ROLLBACK;
END IF;
END;
/