I)

object lenghtfun {
   def main(args: Array[String]) {
      var palindrome = "hello World";
      var len = palindrome.length();
      
      println( "String Length is : " + len );
   }
}

II)

object myObject {
    def main(args: Array[String]) {
        val string1 = "Welcome "
        val string2 = "to Wipro"
        
        val concatString = string1.concat(string2)
        
        println("New String :" + concatString)
    }
}

III)

object Scala_String {
  def WordsInReverse(str1: String): String = {
    val each_words = str1.split(" ");
    var revString = "";
    for (i <- 0 to each_words.length - 1) {
      val word = each_words(i);
      var reverseWord = "";
      for (j <- word.length - 1 to 0 by -1) {
        reverseWord = reverseWord + word.charAt(j);
      }
      revString = revString + reverseWord + " ";
    }
    revString;
  }

  def main(args: Array[String]): Unit = {
    val str1 = "This is a reverse string";
    println("The given string is: " + str1);
    println("The new string after reversed the words: " + WordsInReverse(str1));
  }
}

IV)

object Sample {
    def main(args: Array[String]) {  
        var ch:Char=0;
    
        print("Enter character: ")  
        ch=scala.io.StdIn.readChar()
        
        ch match{
            case 'A'=>printf("%c is a VOWEL.\n",ch);
            case 'E'=>printf("%c is a VOWEL.\n",ch);
            case 'I'=>printf("%c is a VOWEL.\n",ch);
            case 'O'=>printf("%c is a VOWEL.\n",ch);
            case 'U'=>printf("%c is a VOWEL.\n",ch);
            case 'a'=>printf("%c is a VOWEL.\n",ch);
            case 'e'=>printf("%c is a VOWEL.\n",ch);
            case 'i'=>printf("%c is a VOWEL.\n",ch);
            case 'o'=>printf("%c is a VOWEL.\n",ch);
            case 'u'=>printf("%c is a VOWEL.\n",ch);
            case _=>printf("%c is a CONSONANT.\n",ch);
        }  
    }
}  

V)

object Demo {
   def main(args: Array[String]) {
      var myList = Array(1.9, 2.9, 3.4, 3.5)
      
      // Print all the array elements
      for ( x <- myList ) {
         println( x )
      }

      // Summing all elements
      var total = 0.0;
      
      for ( i <- 0 to (myList.length - 1)) {
         total += myList(i);
      }
      println("Total is " + total);

      // Finding the largest element
      var max = myList(0);
      
      for ( i <- 1 to (myList.length - 1) ) {
         if (myList(i) > max) max = myList(i);
      }
      
      println("Max is " + max);
   }
}



VI)

object Scala_Array {

  def rearrange_Array_nums(nums: Array[Int]): Array[Int] = {
    var t_nums = 0;
    for (i <- 1 to nums.length - 1 by 2) {
      if (nums(i - 1) > nums(i)) {
        t_nums = nums(i - 1);
        nums(i - 1) = nums(i);
        nums(i) = t_nums;
      }

      if (i + 1 < nums.length && nums(i + 1) > nums(i)) {
        t_nums = nums(i + 1);
        nums(i + 1) = nums(i);
        nums(i) = t_nums;
      }
    }
    nums;
  }

  def main(args: Array[String]): Unit = {
    val nums = Array(1, 2, 4, 9, 5, 3, 8, 7, 10, 12, 14);
    println("Original array:")
    for (x <- nums) {
      print(s"${x}, ")
    }
    val result = rearrange_Array_nums(nums)
    println(
      "\nArray with every second element is greater than its left and right elements:"
    )
    for (x <- result) {
      print(s"${x}, ")
    }
  }
}


